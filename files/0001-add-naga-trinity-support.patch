From 6e7be54349ef4df9752544c693ef4f80d269d104 Mon Sep 17 00:00:00 2001
From: Luca Weiss <luca@z3ntu.xyz>
Date: Mon, 12 Mar 2018 18:45:56 +0100
Subject: [PATCH] Add support for Razer Naga Trinity

Fixes #541

Co-authored-by: Vincent Taglia <info@vincenttaglia.com>
Co-authored-by: Justin Nichols <justin@nichols.mobi>
---
 README.md                                     |  1 +
 daemon/openrazer_daemon/hardware/mouse.py     | 37 +++++++++++++
 driver/razerchromacommon.c                    | 26 +++++++++
 driver/razerchromacommon.h                    |  2 +
 driver/razermouse_driver.c                    | 55 +++++++++++++++++--
 driver/razermouse_driver.h                    |  1 +
 ...io.github.openrazer.openrazer.metainfo.xml |  1 +
 install_files/udev/99-razer.rules             |  2 +-
 8 files changed, 119 insertions(+), 6 deletions(-)

diff --git a/README.md b/README.md
index 1ed2ab3a..aa5365ca 100644
--- a/README.md
+++ b/README.md
@@ -81,6 +81,7 @@ The below devices are fully feature supported by OpenRazer which means all avail
 | Razer DeathAdder Elite                        |  1532:005C  |
 | Razer Abyssus 2000                            |  1532:005E  |
 | Razer Lancehead Tournament Edition            |  1532:0060  |
+| Razer Naga Trinity                            |  1532:0067  |
 | Razer DeathAdder Essential                    |  1532:006E  |
 
 ### Mousemats
diff --git a/daemon/openrazer_daemon/hardware/mouse.py b/daemon/openrazer_daemon/hardware/mouse.py
index 48c85b22..2eb8a0aa 100644
--- a/daemon/openrazer_daemon/hardware/mouse.py
+++ b/daemon/openrazer_daemon/hardware/mouse.py
@@ -567,6 +567,43 @@ def _close(self):
         # self.key_manager.close()
 
 
+class RazerNagaTrinity(__RazerDeviceSpecialBrightnessSuspend):
+    """
+    Class for the Razer Naga Trinity
+    """
+    EVENT_FILE_REGEX = re.compile(r'.*Razer_Naga_Trinity-if0(1|2)-event-kbd')
+
+    USB_VID = 0x1532
+    USB_PID = 0x0067
+    HAS_MATRIX = True
+    DEDICATED_MACRO_KEYS = True
+    MATRIX_DIMS = [1, 3]
+    METHODS = ['get_device_type_mouse', 'get_dpi_xy', 'set_dpi_xy', 'get_poll_rate', 'set_poll_rate',
+               'get_brightness', 'set_brightness', 'set_static_effect', 'max_dpi']
+
+    DEVICE_IMAGE = "https://assets.razerzone.com/eeimages/support/products/1251/1251_razer_naga_trinity.png"
+
+    # Deprecated - RAZER_URLS be removed in future.
+    RAZER_URLS = {
+        "top_img": "https://assets.razerzone.com/eeimages/support/products/1251/1251_razer_naga_trinity.png"
+    }
+
+    DPI_MAX = 16000
+
+    def __init__(self, *args, **kwargs):
+        super(RazerNagaTrinity, self).__init__(*args, **kwargs)
+
+        # self.key_manager = _NagaHexV2KeyManager(self._device_number, self.event_files, self, use_epoll=True, testing=self._testing, should_grab_event_files=True)
+
+    def _close(self):
+        """
+        Close the key manager
+        """
+        super(RazerNagaTrinity, self)._close()
+
+        # self.key_manager.close()
+
+
 class RazerNagaHex(__RazerDevice):
     """
     Class for the Razer Naga Hex
diff --git a/driver/razerchromacommon.c b/driver/razerchromacommon.c
index c90578b9..f170b9b4 100644
--- a/driver/razerchromacommon.c
+++ b/driver/razerchromacommon.c
@@ -1192,6 +1192,32 @@ struct razer_report razer_chroma_misc_set_orochi2011_poll_dpi(unsigned short pol
     return report;
 }
 
+/**
+ * Set the Naga Trinity to "Static" effect
+ */
+struct razer_report razer_naga_trinity_effect_static(struct razer_rgb *rgb)
+{
+    struct razer_report report = get_razer_report(0x0f, 0x03, 0x0e);
+
+    report.arguments[0] = 0x00; // Variable storage
+    report.arguments[1] = 0x00; // LED ID
+    report.arguments[2] = 0x00; // Unknown
+    report.arguments[3] = 0x00; // Unknown
+    report.arguments[4] = 0x02; // Effect ID
+    report.arguments[5] = rgb->r; // RGB 3x
+    report.arguments[6] = rgb->g;
+    report.arguments[7] = rgb->b;
+    report.arguments[8] = rgb->r;
+    report.arguments[9] = rgb->g;
+    report.arguments[10] = rgb->b;
+    report.arguments[11] = rgb->r;
+    report.arguments[12] = rgb->g;
+    report.arguments[13] = rgb->b;
+    report.transaction_id.id = 0x1f;
+
+    return report;
+}
+
 
 
 
diff --git a/driver/razerchromacommon.h b/driver/razerchromacommon.h
index 0cb6c36a..9c0bd881 100644
--- a/driver/razerchromacommon.h
+++ b/driver/razerchromacommon.h
@@ -121,4 +121,6 @@ struct razer_report razer_chroma_misc_set_low_battery_threshold(unsigned char ba
 struct razer_report razer_chroma_misc_set_orochi2011_led(unsigned char led_bitfield);
 struct razer_report razer_chroma_misc_set_orochi2011_poll_dpi(unsigned short poll_rate, unsigned char dpi_x, unsigned char dpi_y);
 
+struct razer_report razer_naga_trinity_effect_static(struct razer_rgb* rgb);
+
 #endif
diff --git a/driver/razermouse_driver.c b/driver/razermouse_driver.c
index fb3f14b7..c6faa2c2 100644
--- a/driver/razermouse_driver.c
+++ b/driver/razermouse_driver.c
@@ -299,6 +299,10 @@ static ssize_t razer_attr_read_device_type(struct device *dev, struct device_att
         device_type = "Razer Deathadder Essential\n";
         break;
 
+    case USB_DEVICE_ID_RAZER_NAGA_TRINITY:
+        device_type = "Razer Naga Trinity\n";
+        break;
+
     default:
         device_type = "Unknown Device\n";
     }
@@ -439,6 +443,22 @@ static ssize_t razer_attr_write_mode_static(struct device *dev, struct device_at
             report.transaction_id.id = 0xff;
             break;
 
+        case USB_DEVICE_ID_RAZER_NAGA_TRINITY:
+            // Some sort of mode switcher required after initialization and before color switching
+            report = get_razer_report(0x0f, 0x02, 0x06);
+            report.arguments[0] = 0x00;
+            report.arguments[1] = 0x00;
+            report.arguments[2] = 0x08;
+            report.arguments[3] = 0x00;
+            report.arguments[4] = 0x00;
+            report.arguments[5] = 0x00;
+            report.transaction_id.id = 0x1f;
+
+            razer_send_payload(usb_dev, &report);
+
+            report = razer_naga_trinity_effect_static((struct razer_rgb*)&buf[0]);
+            break;
+
         default:
             report = razer_chroma_standard_matrix_effect_static(VARSTORE, BACKLIGHT_LED, (struct razer_rgb*)&buf[0]);
             break;
@@ -787,12 +807,12 @@ static ssize_t razer_attr_write_poll_rate(struct device *dev, struct device_attr
 }
 
 /**
- * Write device file "set_wireless_brightness"
+ * Write device file "matrix_brightness"
  *
  * Sets the brightness to the ASCII number written to this file.
  */
 
-static ssize_t razer_attr_write_set_brightness(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
+static ssize_t razer_attr_write_matrix_brightness(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
 {
     struct usb_interface *intf = to_usb_interface(dev->parent);
     struct usb_device *usb_dev = interface_to_usbdev(intf);
@@ -814,6 +834,11 @@ static ssize_t razer_attr_write_set_brightness(struct device *dev, struct device
         report.transaction_id.id = 0x3f;
         break;
 
+    case USB_DEVICE_ID_RAZER_NAGA_TRINITY:
+        // Naga Trinity uses the LED 0x00 and Matrix Brightness
+        report = razer_chroma_extended_matrix_brightness(VARSTORE, 0x00, brightness);
+        break;
+
     default:
         report = razer_chroma_standard_set_led_brightness(VARSTORE, BACKLIGHT_LED, brightness);
         break;
@@ -824,11 +849,11 @@ static ssize_t razer_attr_write_set_brightness(struct device *dev, struct device
 }
 
 /**
- * Read device file "macro_mode"
+ * Read device file "matrix_brightness"
  *
  * Returns a string
  */
-static ssize_t razer_attr_read_set_brightness(struct device *dev, struct device_attribute *attr, char *buf)
+static ssize_t razer_attr_read_matrix_brightness(struct device *dev, struct device_attribute *attr, char *buf)
 {
     struct usb_interface *intf = to_usb_interface(dev->parent);
     struct usb_device *usb_dev = interface_to_usbdev(intf);
@@ -853,6 +878,11 @@ static ssize_t razer_attr_read_set_brightness(struct device *dev, struct device_
         report.transaction_id.id = 0x3f;
         break;
 
+    case USB_DEVICE_ID_RAZER_NAGA_TRINITY:
+        // Naga Trinity uses the LED 0x00 and Matrix Brightness
+        report = razer_chroma_extended_matrix_get_brightness(VARSTORE, 0x00);
+        break;
+
     default:
         report = razer_chroma_standard_get_led_brightness(VARSTORE, BACKLIGHT_LED);
         break;
@@ -2489,7 +2519,7 @@ static DEVICE_ATTR(charge_effect,             0220, NULL,
 static DEVICE_ATTR(charge_colour,             0220, NULL,                                  razer_attr_write_set_charging_colour);
 static DEVICE_ATTR(charge_low_threshold,      0220, NULL,                                  razer_attr_write_set_low_battery_threshold);
 
-static DEVICE_ATTR(matrix_brightness,         0660, razer_attr_read_set_brightness,        razer_attr_write_set_brightness);
+static DEVICE_ATTR(matrix_brightness,         0660, razer_attr_read_matrix_brightness,     razer_attr_write_matrix_brightness);
 static DEVICE_ATTR(matrix_custom_frame,       0220, NULL,                                  razer_attr_write_set_key_row);
 static DEVICE_ATTR(matrix_effect_none,        0220, NULL,                                  razer_attr_write_mode_none);   // Matrix
 static DEVICE_ATTR(matrix_effect_custom,      0220, NULL,                                  razer_attr_write_mode_custom);   // Matrix
@@ -2921,6 +2951,13 @@ static int razer_mouse_probe(struct hid_device *hdev, const struct hid_device_id
             CREATE_DEVICE_FILE(&hdev->dev, &dev_attr_scroll_matrix_effect_static);
             CREATE_DEVICE_FILE(&hdev->dev, &dev_attr_scroll_matrix_effect_none);
             break;
+
+        case USB_DEVICE_ID_RAZER_NAGA_TRINITY:
+            CREATE_DEVICE_FILE(&hdev->dev, &dev_attr_dpi);
+            CREATE_DEVICE_FILE(&hdev->dev, &dev_attr_poll_rate);
+            CREATE_DEVICE_FILE(&hdev->dev, &dev_attr_matrix_brightness);
+            CREATE_DEVICE_FILE(&hdev->dev, &dev_attr_matrix_effect_static);
+            break;
         }
 
     }
@@ -3226,6 +3263,13 @@ static void razer_mouse_disconnect(struct hid_device *hdev)
             device_remove_file(&hdev->dev, &dev_attr_scroll_matrix_effect_static);
             device_remove_file(&hdev->dev, &dev_attr_scroll_matrix_effect_none);
             break;
+
+        case USB_DEVICE_ID_RAZER_NAGA_TRINITY:
+            device_remove_file(&hdev->dev, &dev_attr_dpi);
+            device_remove_file(&hdev->dev, &dev_attr_poll_rate);
+            device_remove_file(&hdev->dev, &dev_attr_matrix_brightness);
+            device_remove_file(&hdev->dev, &dev_attr_matrix_effect_static);
+            break;
         }
 
     }
@@ -3268,6 +3312,7 @@ static const struct hid_device_id razer_devices[] = {
     { HID_USB_DEVICE(USB_VENDOR_ID_RAZER,USB_DEVICE_ID_RAZER_ABYSSUS_V2) },
     { HID_USB_DEVICE(USB_VENDOR_ID_RAZER,USB_DEVICE_ID_RAZER_DEATHADDER_3500) },
     { HID_USB_DEVICE(USB_VENDOR_ID_RAZER,USB_DEVICE_ID_RAZER_LANCEHEAD_TE_WIRED) },
+    { HID_USB_DEVICE(USB_VENDOR_ID_RAZER,USB_DEVICE_ID_RAZER_NAGA_TRINITY) },
     { HID_USB_DEVICE(USB_VENDOR_ID_RAZER,USB_DEVICE_ID_RAZER_DEATHADDER_ESSENTIAL) },
     { }
 };
diff --git a/driver/razermouse_driver.h b/driver/razermouse_driver.h
index f29ea874..59b34ef1 100644
--- a/driver/razermouse_driver.h
+++ b/driver/razermouse_driver.h
@@ -39,6 +39,7 @@
 #define USB_DEVICE_ID_RAZER_DEATHADDER_ELITE 0x005C
 #define USB_DEVICE_ID_RAZER_ABYSSUS_2000 0x005E
 #define USB_DEVICE_ID_RAZER_LANCEHEAD_TE_WIRED 0x0060
+#define USB_DEVICE_ID_RAZER_NAGA_TRINITY 0x0067
 #define USB_DEVICE_ID_RAZER_DEATHADDER_ESSENTIAL 0x006E
 
 /* Each keyboard report has 90 bytes*/
diff --git a/install_files/appstream/io.github.openrazer.openrazer.metainfo.xml b/install_files/appstream/io.github.openrazer.openrazer.metainfo.xml
index df02af62..866c2b5b 100644
--- a/install_files/appstream/io.github.openrazer.openrazer.metainfo.xml
+++ b/install_files/appstream/io.github.openrazer.openrazer.metainfo.xml
@@ -42,6 +42,7 @@
     <modalias>usb:v1532p005Cd*</modalias>
     <modalias>usb:v1532p005Ed*</modalias>
     <modalias>usb:v1532p0060d*</modalias>
+    <modalias>usb:v1532p0067d*</modalias>
     <modalias>usb:v1532p006Ed*</modalias>
     <modalias>usb:v1532p010Dd*</modalias>
     <modalias>usb:v1532p010Ed*</modalias>
diff --git a/install_files/udev/99-razer.rules b/install_files/udev/99-razer.rules
index d56dd50f..5e43f9fe 100644
--- a/install_files/udev/99-razer.rules
+++ b/install_files/udev/99-razer.rules
@@ -5,7 +5,7 @@ GOTO="razer_end"
 LABEL="razer_vendor"
 
 # Mice
-ATTRS{idProduct}=="0013|0016|0020|0024|0025|002f|0032|0034|0036|0037|0039|0040|0041|0042|0043|0044|0045|0046|0048|004c|0050|0053|0054|005b|005c|005e|0060|006e", \
+ATTRS{idProduct}=="0013|0016|0020|0024|0025|002f|0032|0034|0036|0037|0039|0040|0041|0042|0043|0044|0045|0046|0048|004c|0050|0053|0054|005b|005c|005e|0060|0067|006e", \
     ATTRS{idVendor}=="1532", \
     ENV{ID_RAZER_CHROMA}="1", ENV{RAZER_DRIVER}="razermouse"
 
